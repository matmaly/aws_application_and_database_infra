{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Parameters" : {
    "VPCSize" : {
      "Type" : "String",
      "Default" : "10.1.0.0/16",
      "Description" : "Enter the VPC CIDR size"
    }
  },
  "Resources":  {
    "prodVPC" : {
      "Type" : "AWS::EC2::VPC",
        "Properties" : {
          "CidrBlock" : { "Ref" : "VPCSize" },
          "Tags" : [ { "Key" : "Name", "Value" : "Prod VPC" }, { "Key" : "stack", "Value" : "production" }, { "Key" : "stackType", "Value" : "network" } ]
       }
    },
    "PublicSubnet1" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
          "VpcId" : { "Ref" : "prodVPC" },
          "CidrBlock" : "10.1.0.0/24",
          "AvailabilityZone" : "us-east-1a",
          "Tags" : [ { "Key" : "Name", "Value" : "Prod Public Subnet 1" }, { "Key" : "stack", "Value" : "production" }, { "Key" : "stackType", "Value" : "network" } ],
          "MapPublicIpOnLaunch" : "true"
      }
    },
    "PublicSubnet2" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
          "VpcId" : { "Ref" : "prodVPC" },
          "CidrBlock" : "10.1.1.0/24",
          "AvailabilityZone" : "us-east-1b",
          "Tags" : [ { "Key" : "Name", "Value" : "Prod Public Subnet 2" }, { "Key" : "stack", "Value" : "production" }, { "Key" : "stackType", "Value" : "network" } ],
          "MapPublicIpOnLaunch" : "true"
      }
    },
    "PrivateSubnet1" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
          "VpcId" : { "Ref" : "prodVPC" },
          "CidrBlock" : "10.1.10.0/24",
          "AvailabilityZone" : "us-east-1a",
          "Tags" : [ { "Key" : "Name", "Value" : "Prod Private Subnet 1" }, { "Key" : "stack", "Value" : "production" }, { "Key" : "stackType", "Value" : "network" } ],
      }
    },
    "PrivateSubnet2" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
          "VpcId" : { "Ref" : "prodVPC" },
          "CidrBlock" : "10.1.11.0/24",
          "AvailabilityZone" : "us-east-1b",
          "Tags" : [ { "Key" : "Name", "Value" : "Prod Private Subnet 2" }, { "Key" : "stack", "Value" : "production" }, { "Key" : "stackType", "Value" : "network" } ],
      }
    },
    "PublicRouteTable1": {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : { "Ref" : "prodVPC" },
        "Tags" : [ { "Key" : "Name", "Value" : "Prod Public Route Table 1" }, { "Key" : "stack", "Value" : "production" }, { "Key" : "stackType", "Value" : "network" } ]
      }
    },
    "PublicRouteTable2": {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : { "Ref" : "prodVPC" },
        "Tags" : [ { "Key" : "Name", "Value" : "Prod Public Route Table 2" }, { "Key" : "stack", "Value" : "production" }, { "Key" : "stackType", "Value" : "network" } ]
      }
    },
    "PrivateRouteTable1": {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : { "Ref" : "prodVPC" },
        "Tags" : [ { "Key" : "Name", "Value" : "Prod Private Route Table 1" }, { "Key" : "stack", "Value" : "production" }, { "Key" : "stackType", "Value" : "network" } ]
      }
    },
    "PrivateRouteTable2": {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : { "Ref" : "prodVPC" },
        "Tags" : [ { "Key" : "Name", "Value" : "Prod Private Route Table 2" }, { "Key" : "stack", "Value" : "production" }, { "Key" : "stackType", "Value" : "network" } ]
      }
    },
    "PublicSubnetRouteTableAssociation1" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PublicRouteTable1" },
        "SubnetId" : { "Ref" : "PublicSubnet1" }
      }
    },
    "PublicSubnetRouteTableAssociation2" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PublicRouteTable2" },
        "SubnetId" : { "Ref" : "PublicSubnet2" }
      }
    },
    "PrivateSubnetRouteTableAssociation1" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivateRouteTable1" },
        "SubnetId" : { "Ref" : "PrivateSubnet1" }
      }
    },
    "PrivateSubnetRouteTableAssociation2" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivateRouteTable2" },
        "SubnetId" : { "Ref" : "PrivateSubnet2" }
      }
    },
    "NAT1" : {
      "Type" : "AWS::EC2::NatGateway",
      "DependsOn" : "NATEIP1",
      "Properties" : {
        "AllocationId" : { "Fn::GetAtt" : ["NATEIP1", "AllocationId"]},
        "SubnetId" : { "Ref" : "PublicSubnet1"},
        "Tags" : [ { "Key" : "Name", "Value" : "Prod NAT 1" }, { "Key" : "stack", "Value" : "production" }, { "Key" : "stackType", "Value" : "network" } ]
       }
    },
    "NATEIP1" : {
      "Type" : "AWS::EC2::EIP",
      "Properties" : {
        "Domain" : "vpc",
        "Tags" : [ { "Key" : "Name", "Value" : "NAT EIP 1" }, { "Key" : "stack", "Value" : "production" }, { "Key" : "stackType", "Value" : "network" } ] 
      }
    },
    "NAT1Route" : {
      "Type" : "AWS::EC2::Route",
      "DependsOn" : "NAT1",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivateRouteTable1" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "NatGatewayId" : { "Ref" : "NAT1" }
      }
    },
    "NAT2" : {
      "Type" : "AWS::EC2::NatGateway",
      "DependsOn" : "NATEIP2",
      "Properties" : {
        "AllocationId" : { "Fn::GetAtt" : ["NATEIP2", "AllocationId"]},
        "SubnetId" : { "Ref" : "PublicSubnet2"},
        "Tags" : [ { "Key" : "Name", "Value" : "Prod NAT 2" }, { "Key" : "stack", "Value" : "production" }, { "Key" : "stackType", "Value" : "network" } ]
       }
    },
    "NATEIP2" : {
      "Type" : "AWS::EC2::EIP",
      "Properties" : {
        "Domain" : "vpc",
        "Tags" : [ { "Key" : "Name", "Value" : "NAT EIP 2" }, { "Key" : "stack", "Value" : "production" }, { "Key" : "stackType", "Value" : "network" } ] 
      }
    },
    "NAT2Route" : {
      "Type" : "AWS::EC2::Route",
      "DependsOn" : "NAT2",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivateRouteTable2" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "NatGatewayId" : { "Ref" : "NAT2" }
      }
    },
    "ProdInternetGateway" : {
      "Type" : "AWS::EC2::InternetGateway",
      "Properties" : {
        "Tags" : [ { "Key" : "Name", "Value" : "Prod IGW" }, { "Key" : "stack", "Value" : "production" }, { "Key" : "stackType", "Value" : "network" } ]
      }
    },
    "AttachIGWGateway" : {
      "Type" : "AWS::EC2::VPCGatewayAttachment",
      "Properties" : {
        "VpcId" : { "Ref" : "prodVPC" },
        "InternetGatewayId" : { "Ref" : "ProdInternetGateway" }
      }
    },
    "ProdBastionSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupName" : "Prod Bastion SG",
        "GroupDescription" : "Allow Bastion ssh access",
        "VpcId" : {"Ref" : "prodVPC"},
        "SecurityGroupIngress" : [{
          "IpProtocol" : "tcp",
          "FromPort" : 22,
          "ToPort" : 22,
          "CidrIp" : "0.0.0.0/0"
        }],
        "Tags" : [ { "Key" : "Name", "Value" : "Prod Bastion SG" }, { "Key" : "stack", "Value" : "production" }, { "Key" : "stackType", "Value" : "network" } ]
      }
    },
    "ProdALBSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupName" : "Prod ALB SG",
        "GroupDescription" : "Allow HTTP access to the ALB",
        "VpcId" : {"Ref" : "prodVPC"},
        "SecurityGroupIngress" : [{
          "IpProtocol" : "tcp",
          "FromPort" : 80,
          "ToPort" : 80,
          "CidrIp" : "0.0.0.0/0"
        },
        {
          "IpProtocol" : "tcp",
          "FromPort" : 443,
          "ToPort" : 443,
          "CidrIp" : "0.0.0.0/0"
        }],
        "Tags" : [ { "Key" : "Name", "Value" : "Prod ALB SG" }, { "Key" : "stack", "Value" : "production" }, { "Key" : "stackType", "Value" : "network" } ]
      }
    },
    "ProdAppSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "DependsOn" : "ProdALBSecurityGroup",
      "Properties" : {
        "GroupName" : "Prod App SG",
        "GroupDescription" : "Allow HTTP access to the App from ALB SG",
        "VpcId" : {"Ref" : "prodVPC"},
        "Tags" : [ { "Key" : "Name", "Value" : "Prod App SG" }, { "Key" : "stack", "Value" : "production" }, { "Key" : "stackType", "Value" : "network" } ]
      }
    },
    "ProdAppSecurityGroupInboundRule1": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties":{
         "IpProtocol": "tcp",
         "FromPort": 80,
         "ToPort": 80,
         "SourceSecurityGroupId": {
           "Fn::GetAtt": [
             "ProdALBSecurityGroup",
             "GroupId"
            ]
         },
         "GroupId": {
            "Fn::GetAtt": [
              "ProdAppSecurityGroup",
              "GroupId"
            ]
         }
      }
    },
    "ProdAppSecurityGroupInboundRule2": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties":{
         "IpProtocol": "tcp",
         "FromPort": 443,
         "ToPort": 443,
         "SourceSecurityGroupId": {
           "Fn::GetAtt": [
             "ProdALBSecurityGroup",
             "GroupId"
            ]
         },
         "GroupId": {
            "Fn::GetAtt": [
              "ProdAppSecurityGroup",
              "GroupId"
            ]
         }
      }
    },
    "ProdDBSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "DependsOn" : "ProdAppSecurityGroup",
      "Properties" : {
        "GroupName" : "Prod DB SG",
        "GroupDescription" : "Allow DB access to the App from App SG",
        "VpcId" : {"Ref" : "prodVPC"},
        "Tags" : [ { "Key" : "Name", "Value" : "Prod DB SG" }, { "Key" : "stack", "Value" : "production" }, { "Key" : "stackType", "Value" : "network" } ]
      }
    },
    "ProdDBSecurityGroupInboundRule": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties":{
         "IpProtocol": "tcp",
         "FromPort": 3306,
         "ToPort": 3306,
         "SourceSecurityGroupId": {
           "Fn::GetAtt": [
             "ProdAppSecurityGroup",
             "GroupId"
            ]
         },
         "GroupId": {
            "Fn::GetAtt": [
              "ProdDBSecurityGroup",
              "GroupId"
            ]
         }
      }
    }
  },
  "Outputs": {
    "ProdDBSecurityGroupID": {
        "Value": { "!Ref" : "ProdDBSecurityGroup" },
        "Description": "ID of the DB SG"
    },
    "ALBSecurityGroupID": {
        "Value": { "!Ref" : "ProdALBSecurityGroup" },
        "Description": "ID of the ALB SG"
    },
    "PrivateSubnet1ID": {
        "Value": { "!Ref" : "PrivateSubnet1" },
        "Description": "ID of the Private Subnet1"
    },
    "PrivateSubnet2ID": {
        "Value": { "!Ref" : "PrivateSubnet2" },
        "Description": "ID of the Private Subnet2"
    },
  }
}


